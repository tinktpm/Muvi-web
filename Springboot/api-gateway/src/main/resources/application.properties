spring.application.name=api-gateway
server.forward-headers-strategy=framework
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.hostname=localhost

# Global CORS Configuration
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=http://localhost:5173,http://localhost:8081
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=GET,POST,DELETE,PUT,OPTIONS
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=*

# Default Filters Configuration
spring.cloud.gateway.default-filters=DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin


# Enable the Eureka client
eureka.client.enabled=true

# Register with Eureka server without waiting for it to start successfully
eureka.client.register-with-eureka=true

# Fetch registry information from Eureka server during startup
eureka.client.fetch-registry=true


# discovery-service
spring.cloud.gateway.routes[0].id=eureka-server
spring.cloud.gateway.routes[0].uri=http://localhost:8761
spring.cloud.gateway.routes[0].predicates[0]=Path=/eureka/web
spring.cloud.gateway.routes[0].filters[0]=SetPath=/

# discovery-service-static
spring.cloud.gateway.routes[1].id=eureka-server-static
spring.cloud.gateway.routes[1].uri=http://localhost:8761
spring.cloud.gateway.routes[1].predicates[0]=Path=/eureka/**

# film-service
spring.cloud.gateway.routes[2].id=film-service
spring.cloud.gateway.routes[2].uri=lb://film-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/v1/film/**
spring.cloud.gateway.routes[2].predicates[1]=Path=/api/v1/movie/**
spring.cloud.gateway.routes[2].predicates[2]=Path=/api/v1/tv_show/**
spring.cloud.gateway.routes[2].predicates[3]=Path=/api/v1/season/**
spring.cloud.gateway.routes[2].predicates[4]=Path=/api/v1/episode/**
spring.cloud.gateway.routes[2].predicates[5]=Path=/api/v1/watchlist/**
spring.cloud.gateway.routes[2].predicates[6]=Path=/api/v1/property/**

# recommendation-service
spring.cloud.gateway.routes[3].id=recommendation-service
spring.cloud.gateway.routes[3].uri=lb://recommendation-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/v1/recommendation/**

# history-service
spring.cloud.gateway.routes[4].id=view-service
spring.cloud.gateway.routes[4].uri=lb://view-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/v1/list_history_film/**
spring.cloud.gateway.routes[4].predicates[1]=Path=/api/v1/update_history_film/**

# review-service
spring.cloud.gateway.routes[5].id=review-service
spring.cloud.gateway.routes[5].uri=lb://review-service
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/v1/rate/**
spring.cloud.gateway.routes[5].predicates[1]=Path=/api/v1/websocket-comment/**
spring.cloud.gateway.routes[5].predicates[2]=Path=/api/v1/comments/**

# review-service
spring.cloud.gateway.routes[6].id=notification-service
spring.cloud.gateway.routes[6].uri=lb://notification-service
spring.cloud.gateway.routes[6].predicates[0]=Path=/api/v1/comment-notification/**
spring.cloud.gateway.routes[6].predicates[1]=Path=/api/v1/account-notification/**
spring.cloud.gateway.routes[6].predicates[2]=Path=/api/v1/film-notification/**
spring.cloud.gateway.routes[6].predicates[3]=Path=/api/v1/email/**
spring.cloud.gateway.routes[6].predicates[4]=Path=/api/v1/notification/**

# recommendation-service
spring.cloud.gateway.routes[7].id=payment-service
spring.cloud.gateway.routes[7].uri=lb://payment-service
spring.cloud.gateway.routes[7].predicates[0]=Path=/api/v1/bill/**

# auth-service
spring.cloud.gateway.routes[8].id=auth-service
spring.cloud.gateway.routes[8].uri=lb://auth-service
spring.cloud.gateway.routes[8].predicates[0]=Path=/api/v1/auth/**

# user-service
spring.cloud.gateway.routes[9].id=user-service
spring.cloud.gateway.routes[9].uri=lb://user-service
spring.cloud.gateway.routes[9].predicates[0]=Path=/api/v1/user/**

# review-service
spring.cloud.gateway.routes[10].id=rating-service
spring.cloud.gateway.routes[10].uri=lb://rating-service
spring.cloud.gateway.routes[10].predicates[0]=Path=/api/v1/rate/**

spring.main.allow-bean-definition-overriding=true

#jwt
jwt.secret=ARRjiGBf+uLsc3FzLzm9aLQaM1dQrKXtrut0gwwyJIWhu8tWYmUvhUBHEkGOPl+N

springdoc.swagger-ui.path=/swagger-ui
springdoc.packagesToScan=com.microservice.apigateway

